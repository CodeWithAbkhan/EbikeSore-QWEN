@page "/admin/products/create"
@using Microsoft.AspNetCore.Components.Authorization
@using EbikeStore.Models
@inject IProductRepository ProductRepository
@inject ICategoryRepository CategoryRepository
@inject IBrandRepository BrandRepository
@inject NavigationManager Navigation

@rendermode InteractiveServer

<AuthorizeView Roles="Admin,Staff" Context="authContext">
    <Authorized>
        <div class="container mx-auto px-4 py-8">
            <h1 class="text-3xl font-bold mb-6">Create New Product</h1>
            
            <div class="bg-white rounded-lg shadow-md p-6">
                <EditForm Model="@product" OnValidSubmit="HandleValidSubmit" Context="editFormContext">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                            <label class="block text-gray-700 mb-2">Name</label>
                            <InputText class="w-full border rounded py-2 px-3" @bind-Value="product.Name" />
                            <ValidationMessage For="@(() => product.Name)" />
                        </div>
                        
                        <div>
                            <label class="block text-gray-700 mb-2">SKU</label>
                            <InputText class="w-full border rounded py-2 px-3" @bind-Value="product.Sku" />
                            <ValidationMessage For="@(() => product.Sku)" />
                        </div>
                        
                        <div class="md:col-span-2">
                            <label class="block text-gray-700 mb-2">Description</label>
                            <textarea class="w-full border rounded py-2 px-3" rows="4" @bind="product.Description"></textarea>
                            <ValidationMessage For="@(() => product.Description)" />
                        </div>
                        
                        <div>
                            <label class="block text-gray-700 mb-2">Price</label>
                            <InputNumber class="w-full border rounded py-2 px-3" @bind-Value="product.Price" />
                            <ValidationMessage For="@(() => product.Price)" />
                        </div>
                        
                        <div>
                            <label class="block text-gray-700 mb-2">Stock Quantity</label>
                            <InputNumber class="w-full border rounded py-2 px-3" @bind-Value="product.StockQuantity" />
                            <ValidationMessage For="@(() => product.StockQuantity)" />
                        </div>
                        
                        <div>
                            <label class="block text-gray-700 mb-2">Category</label>
                            <select class="w-full border rounded py-2 px-3" @bind="product.CategoryId">
                                <option value="0">Select a category</option>
                                @foreach (var category in categories)
                                {
                                    <option value="@category.Id">@category.Name</option>
                                }
                            </select>
                        </div>
                        
                        <div>
                            <label class="block text-gray-700 mb-2">Brand</label>
                            <select class="w-full border rounded py-2 px-3" @bind="product.BrandId">
                                <option value="0">Select a brand</option>
                                @foreach (var brand in brands)
                                {
                                    <option value="@brand.Id">@brand.Name</option>
                                }
                            </select>
                        </div>
                        
                        <div class="md:col-span-2">
                            <label class="block text-gray-700 mb-2">Image URL</label>
                            <InputText class="w-full border rounded py-2 px-3" @bind-Value="product.ImageUrl" />
                            <ValidationMessage For="@(() => product.ImageUrl)" />
                        </div>
                    </div>
                    
                    <div class="mt-6 flex space-x-4">
                        <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                            Create Product
                        </button>
                        <button type="button" class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded" @onclick="GoBack">
                            Cancel
                        </button>
                    </div>
                </EditForm>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="container mx-auto px-4 py-8">
            <div class="bg-white rounded-lg shadow-md p-8 text-center">
                <h2 class="text-2xl font-bold mb-4">Access Denied</h2>
                <p class="text-gray-600">You do not have permission to access this page.</p>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private Product product = new();
    private List<Category> categories = new();
    private List<Brand> brands = new();

    protected override async Task OnInitializedAsync()
    {
        categories = (await CategoryRepository.GetAllCategoriesAsync()).ToList();
        brands = (await BrandRepository.GetAllBrandsAsync()).ToList();
    }

    private async Task HandleValidSubmit()
    {
        await ProductRepository.AddProductAsync(product);
        Navigation.NavigateTo("/admin/products");
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/admin/products");
    }
}