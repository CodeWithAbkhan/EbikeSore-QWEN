@page "/admin/categories"
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.QuickGrid
@using EbikeStore.Models
@inject ICategoryRepository CategoryRepository
@inject NavigationManager Navigation

@rendermode InteractiveServer

<AuthorizeView Roles="Admin,Staff" Context="authContext">
    <Authorized>
        <div class="container mx-auto px-4 py-8">
            <!-- Admin Navigation -->
            <div class="bg-white rounded-lg shadow-md p-4 mb-6">
                <div class="flex flex-wrap gap-2">
                    <a href="/admin/dashboard" class="px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300">Dashboard</a>
                    <a href="/admin/products" class="px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300">Products</a>
                    <a href="/admin/categories" class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">Categories</a>
                    <a href="/admin/brands" class="px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300">Brands</a>
                </div>
            </div>
            
            <div class="flex justify-between items-center mb-6">
                <h1 class="text-3xl font-bold">Category Management</h1>
                <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded" @onclick="GoToCreate">
                    Add New Category
                </button>
            </div>

            <div class="bg-white rounded-lg shadow-md overflow-hidden">
                <QuickGrid Items="categories.AsQueryable()" Pagination="@pagination" class="w-full">
                    <PropertyColumn Property="@(c => c.Id)" Title="ID" />
                    <PropertyColumn Property="@(c => c.Name)" Title="Name" />
                    <PropertyColumn Property="@(c => c.Description)" Title="Description" />
                    <TemplateColumn Title="Actions" Context="itemContext">
                        <div class="flex space-x-2">
                            <button class="text-blue-500 hover:text-blue-700" @onclick="() => EditCategory(itemContext.Id)">
                                <span class="material-symbols-outlined">edit</span>
                            </button>
                            <button class="text-red-500 hover:text-red-700" @onclick="() => DeleteCategory(itemContext.Id)">
                                <span class="material-symbols-outlined">delete</span>
                            </button>
                        </div>
                    </TemplateColumn>
                </QuickGrid>
                <Paginator   State="@pagination" />
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="container mx-auto px-4 py-8">
            <div class="bg-white rounded-lg shadow-md p-8 text-center">
                <h2 class="text-2xl font-bold mb-4">Access Denied</h2>
                <p class="text-gray-600">You do not have permission to access this page.</p>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private List<Category> categories = new();
    private PaginationState pagination = new() { ItemsPerPage = 5 };

    protected override async Task OnInitializedAsync()
    {
        await LoadCategories();
    }

    private async Task LoadCategories()
    {
        categories = (await CategoryRepository.GetAllCategoriesAsync()).ToList();
        StateHasChanged();
    }

    private void GoToCreate()
    {
        Navigation.NavigateTo("/admin/categories/create");
    }

    private void EditCategory(int categoryId)
    {
        Navigation.NavigateTo($"/admin/categories/edit/{categoryId}");
    }

    private async Task DeleteCategory(int categoryId)
    {
        await CategoryRepository.DeleteCategoryAsync(categoryId);
        await LoadCategories();
    }
}